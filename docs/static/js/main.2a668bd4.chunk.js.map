{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExperApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCJDQ,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBACFC,QAAQC,IAAIR,GAERE,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAKlB,SACI,uBAAOS,KAAK,OAAOC,MAAOX,EAAYY,SApBpB,SAACT,GAEvBE,QAAQC,IAAIH,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAKlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAYtB,ECdwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OAtBAC,qBAAU,WACNxB,EAAQC,GAAUxB,MAAK,SAAAgD,GAGnBlC,QAAQC,IAAIiC,GACZF,EAAS,CACLf,KAAMiB,EACNJ,SAAS,SAMlB,CAACpB,IASGqB,EDd2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAMtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aE5BlCe,EAAc,WAEvB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ4C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YClBjC4B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.2a668bd4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import PropTypes from 'prop-types'\r\nimport React, { useState } from 'react';\r\n\r\nexport const AddCategory = ({ setcategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('Hola Mundo');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        console.log(e.target.value)\r\n        setinputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        console.log(setcategories);\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setcategories(cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type='text' value={inputValue} onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=UyinGr8iNie4YrjLeyVLtcUlb3NRTax0`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\nexport const GifGridItems = ({ title, url }) => {\r\n\r\n    // console.log({ title, url });\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n\r\n    \r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItems } from './GifGridItems';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category).then(setImages);\r\n    // }, [category]);\r\n\r\n    // getGifs();\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    // console.log(data);\r\n    // console.log(loading);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n            {loading && <p>loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n\r\n                        <GifGridItems key={img.id} {...img} >\r\n\r\n                        </GifGridItems>\r\n                        // <li key={id}>\r\n                        //     {\r\n                        //         title\r\n                        //     }\r\n                        // </li>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { getGifs } from '../helpers/getGifs';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n\r\n            console.log(imgs);\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n\r\n\r\n        });\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExperApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategories(cats=>[...cats,'TOTO']);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setcategories={setcategories}></AddCategory>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category} >\r\n                        </GifGrid>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { GifExperApp } from './GifExpertApp';\n\nReactDOM.render(\n\n  <GifExperApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}